{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,I,E,I,K,E,W,C,E,a,C,C,GCmCA,IAAA,EAnCmB,CACjB,aAAc,qCACd,kBAAmB,sCAEnB,SAAU,IAEV,MAAM,cAAc,CAAI,EACtB,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,IAAI,CAAC,YAAY,CAAA,EAAG,EAAK,cAAc,CAAC,EACxE,GAAI,CAAC,EAAS,EAAE,CACd,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAG1D,MAAO,AADM,CAAA,MAAM,EAAS,IAAI,EAAhC,EACY,IAAI,CAAC,KAAK,AACxB,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,6BAA8B,GACrC,IACT,CACF,EAEA,MAAM,kBAAkB,CAAW,EACjC,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,IAAI,CAAC,iBAAiB,CAAA,EAAG,EAAA,CAAa,EACtE,GAAI,CAAC,EAAS,EAAE,CACd,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAG1D,MAAO,AADM,CAAA,MAAM,EAAS,IAAI,EAAhC,EACY,IAAI,AAClB,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,gCAAiC,GACxC,IACT,CACF,CACF,C,G,E","sources":["<anon>","js/model.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"kUb5C\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $f381a3c3b9cf5311$export$2e2bcd8739ae039);\nconst $f381a3c3b9cf5311$var$QuranModel = {\n    API_BASE_URL: \"https://api.alquran.cloud/v1/page/\",\n    SURAH_DETAILS_URL: \"https://api.alquran.cloud/v1/surah/\",\n    maxPages: 604,\n    async fetchPageData (page) {\n        try {\n            const response = await fetch(`${this.API_BASE_URL}${page}/quran-uthmani`);\n            if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n            const data = await response.json();\n            return data.data.ayahs;\n        } catch (error) {\n            console.error(\"Error fetching Quran page:\", error);\n            return null;\n        }\n    },\n    async fetchSurahDetails (surahNumber) {\n        try {\n            const response = await fetch(`${this.SURAH_DETAILS_URL}${surahNumber}`);\n            if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n            const data = await response.json();\n            return data.data;\n        } catch (error) {\n            console.error(\"Error fetching Surah details:\", error);\n            return null;\n        }\n    }\n};\nvar $f381a3c3b9cf5311$export$2e2bcd8739ae039 = $f381a3c3b9cf5311$var$QuranModel;\n\n});\n\n\nparcelRequire(\"kUb5C\");\n\n//# sourceMappingURL=index.6cec56ba.js.map\n","const QuranModel = {\r\n  API_BASE_URL: \"https://api.alquran.cloud/v1/page/\",\r\n  SURAH_DETAILS_URL: \"https://api.alquran.cloud/v1/surah/\", // New API for Surah details\r\n\r\n  maxPages: 604,\r\n\r\n  async fetchPageData(page) {\r\n    try {\r\n      const response = await fetch(`${this.API_BASE_URL}${page}/quran-uthmani`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      return data.data.ayahs;\r\n    } catch (error) {\r\n      console.error(\"Error fetching Quran page:\", error);\r\n      return null;\r\n    }\r\n  },\r\n\r\n  async fetchSurahDetails(surahNumber) {\r\n    try {\r\n      const response = await fetch(`${this.SURAH_DETAILS_URL}${surahNumber}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      return data.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching Surah details:\", error);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nexport default QuranModel;\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$f381a3c3b9cf5311$export$2e2bcd8739ae039","set","s","enumerable","configurable","API_BASE_URL","SURAH_DETAILS_URL","maxPages","fetchPageData","page","response","fetch","ok","status","data","json","ayahs","error","console","fetchSurahDetails","surahNumber"],"version":3,"file":"index.6cec56ba.js.map"}