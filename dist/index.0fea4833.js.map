{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,I,E,I,K,E,W,C,E,a,C,C,GCiEA,IAAA,EAjEkB,CAChB,WAAY,KAEZ,KAAK,CAAU,EACb,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,WAAW,CAAG,SAAS,cAAc,CAAC,gBAC3C,IAAI,CAAC,YAAY,CAAG,SAAS,cAAc,CAAC,iBAE5C,IAAI,CAAC,iBAAiB,CAAG,SAAS,cAAc,CAAC,eACjD,IAAI,CAAC,UAAU,CAAG,SAAS,cAAc,CAAC,QAC1C,IAAI,CAAC,UAAU,CAAG,SAAS,cAAc,CAAC,QAC1C,IAAI,CAAC,SAAS,CAAG,SAAS,cAAc,CAAC,cAEzC,IAAI,CAAC,WAAW,CAAG,EACnB,IAAI,CAAC,UAAU,EACjB,EAEA,MAAM,aACJ,IAAI,CAAC,WAAW,CAAC,SAAS,CAAG,aAC7B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAG,GAE9B,IAAM,EAAU,MAAM,gBAAgB,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAEvE,CAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAG,EAC7B,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAG,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAA,CAAE,CAE/D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAG,AAAqB,IAArB,IAAI,CAAC,WAAW,CAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAG,IAAI,CAAC,WAAW,GAAK,WAAW,QAAQ,AACrE,EAEA,oBAAoB,CAAK,CAAE,CAAG,CAAE,CAAI,EAC7B,GACL,CAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAG;A;AAEhB,kBAAA,EAAE,EAAM,WAAW,CAAC,sBAAsB,EACtD,EAAM,sBAAsB,CAC7B,mCAAmC,EAClC,EAAM,cAAc,CACrB,mCAAmC,EAAE,EAAM,aAAa,CAAC;A;AAE1B,oCAAA,EAAE,GAAO,UAAU;AACZ,2CAAA,EAAE,KAAK,KAAK,CAAC,EAAO,GAAG,CAAC,EAC7D,EAAO,EACR;A;A;AAGD,IAAA,CAAC,AAAD,CACF,EAEA,WAAW,CAAS,EAClB,IAAI,CAAC,WAAW,EAAI,EACpB,IAAI,CAAC,UAAU,EACjB,EAEA,aACE,IAAM,EAAO,SAAS,IAAI,CAAC,SAAS,CAAC,KAAK,CAAE,GACxC,CAAA,GAAQ,GAAK,GAAQ,WAAW,QAAQ,EAC1C,IAAI,CAAC,WAAW,CAAG,EACnB,IAAI,CAAC,UAAU,IAEf,MAAM,sDAEV,CACF,C,G,E","sources":["<anon>","js/view.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"gFScX\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $c23a8642c134aff9$export$2e2bcd8739ae039);\nconst $c23a8642c134aff9$var$QuranView = {\n    controller: null,\n    init (controller) {\n        this.controller = controller;\n        this.pageContent = document.getElementById(\"page-content\");\n        this.surahDetails = document.getElementById(\"surah-details\");\n        this.pageNumberElement = document.getElementById(\"page-number\");\n        this.prevButton = document.getElementById(\"prev\");\n        this.nextButton = document.getElementById(\"next\");\n        this.pageInput = document.getElementById(\"page-input\");\n        this.currentPage = 1;\n        this.updatePage();\n    },\n    async updatePage () {\n        this.pageContent.innerHTML = \"Loading...\";\n        this.surahDetails.innerHTML = \"\"; // Clear previous details\n        const content = await QuranController.getQuranPageData(this.currentPage);\n        this.pageContent.innerHTML = content;\n        this.pageNumberElement.textContent = `Page ${this.currentPage}`;\n        this.prevButton.disabled = this.currentPage === 1;\n        this.nextButton.disabled = this.currentPage === QuranModel.maxPages;\n    },\n    displaySurahDetails (surah, juz, hizb) {\n        if (!surah) return;\n        this.surahDetails.innerHTML = `\n    <table>\n    <tr><td><span>${surah.englishName}</span></td><td><span>${surah.englishNameTranslation}</span></td><td><span>Type:</span> ${surah.revelationType}</td><td><span>Total Ayahs: </span>${surah.numberOfAyahs}</td></tr>\n    <tr>\n    <td colspan=2><span>Juz:</span> ${juz || \"Unknown\"}</td>\n        <td colspan = 2><span>Hizb:</span> ${Math.floor(hizb / 4)} ${hizb % 4}/4 </td>\n    </tr>\n    </table>\n    `;\n    },\n    changePage (direction) {\n        this.currentPage += direction;\n        this.updatePage();\n    },\n    jumpToPage () {\n        const page = parseInt(this.pageInput.value, 10);\n        if (page >= 1 && page <= QuranModel.maxPages) {\n            this.currentPage = page;\n            this.updatePage();\n        } else alert(\"Please enter a valid page number between 1 and 604.\");\n    }\n};\nvar $c23a8642c134aff9$export$2e2bcd8739ae039 = $c23a8642c134aff9$var$QuranView;\n\n});\n\n\nparcelRequire(\"gFScX\");\n\n//# sourceMappingURL=index.0fea4833.js.map\n","const QuranView = {\r\n  controller: null,\r\n\r\n  init(controller) {\r\n    this.controller = controller;\r\n    this.pageContent = document.getElementById(\"page-content\");\r\n    this.surahDetails = document.getElementById(\"surah-details\");\r\n\r\n    this.pageNumberElement = document.getElementById(\"page-number\");\r\n    this.prevButton = document.getElementById(\"prev\");\r\n    this.nextButton = document.getElementById(\"next\");\r\n    this.pageInput = document.getElementById(\"page-input\");\r\n\r\n    this.currentPage = 1;\r\n    this.updatePage();\r\n  },\r\n\r\n  async updatePage() {\r\n    this.pageContent.innerHTML = \"Loading...\";\r\n    this.surahDetails.innerHTML = \"\"; // Clear previous details\r\n\r\n    const content = await QuranController.getQuranPageData(this.currentPage);\r\n\r\n    this.pageContent.innerHTML = content;\r\n    this.pageNumberElement.textContent = `Page ${this.currentPage}`;\r\n\r\n    this.prevButton.disabled = this.currentPage === 1;\r\n    this.nextButton.disabled = this.currentPage === QuranModel.maxPages;\r\n  },\r\n\r\n  displaySurahDetails(surah, juz, hizb) {\r\n    if (!surah) return;\r\n    this.surahDetails.innerHTML = `\r\n    <table>\r\n    <tr><td><span>${surah.englishName}</span></td><td><span>${\r\n      surah.englishNameTranslation\r\n    }</span></td><td><span>Type:</span> ${\r\n      surah.revelationType\r\n    }</td><td><span>Total Ayahs: </span>${surah.numberOfAyahs}</td></tr>\r\n    <tr>\r\n    <td colspan=2><span>Juz:</span> ${juz || \"Unknown\"}</td>\r\n        <td colspan = 2><span>Hizb:</span> ${Math.floor(hizb / 4)} ${\r\n      hizb % 4\r\n    }/4 </td>\r\n    </tr>\r\n    </table>\r\n    `;\r\n  },\r\n\r\n  changePage(direction) {\r\n    this.currentPage += direction;\r\n    this.updatePage();\r\n  },\r\n\r\n  jumpToPage() {\r\n    const page = parseInt(this.pageInput.value, 10);\r\n    if (page >= 1 && page <= QuranModel.maxPages) {\r\n      this.currentPage = page;\r\n      this.updatePage();\r\n    } else {\r\n      alert(\"Please enter a valid page number between 1 and 604.\");\r\n    }\r\n  },\r\n};\r\n\r\nexport default QuranView;\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$c23a8642c134aff9$export$2e2bcd8739ae039","set","s","enumerable","configurable","controller","pageContent","document","getElementById","surahDetails","pageNumberElement","prevButton","nextButton","pageInput","currentPage","updatePage","innerHTML","content","QuranController","getQuranPageData","textContent","disabled","QuranModel","maxPages","displaySurahDetails","surah","juz","hizb","englishName","englishNameTranslation","revelationType","numberOfAyahs","Math","floor","changePage","direction","jumpToPage","page","parseInt","value","alert"],"version":3,"file":"index.0fea4833.js.map"}